{
    "env_param" : {
            "env" : "sb",  
            "_comment" : "choose Alma environment : 'sb' for sandbox env or 'prod' for production" 
    },
    "inst_param" : {
            "inst" : "iz1",
            "_comment" : "choose Alma institution zone used to add local fields: abbreviation used must be consistent with those provided in secure_params.json"
    },    
    "file_param" : {
            "XMLfile_name" : "test_books_2rec",
            "XMLfile_path" : "./test_files/",
            "_comment" : "e.g.: 'C:/Users/username/Documents'"
    },
    "secure_file_path" : "./secure_files/",
    "rules_param" : {
        "nz_rule_sb" : "",
        "nz_rule_prod" : "",
        "nz_rule_sb_update" : "",
        "nz_rule_prod_update" : "",
        "iz_rule_sb" : "",
        "iz_rule_prod" : "",
        "iz_rule_sb_update" : "",
        "iz_rule_prod_update" : "",
        "_comment" : "process id to apply in Alma ('nz' = Network zone, 'iz' = Institution zone) : e.g. '102793104110XXXX'"
    },
    "code_bib_alma" : "vdtest",
    "fields_update" : {
        "972" : { 
            "update_method" : "concat_at_end",
            "subfields" : ["a"]
        },
        "985" : {
            "update_method" : "add_new_field",
            "subfields" : false
        },
        "905" : {
            "update_method" : "add_new_field",
            "subfields" : false
        },
        "035" : {
            "update_method" : "add_new_field",
            "subfields" : false
        },
        "_comment" : {
            "update_method" : [
                "choose between : 1'concat_at_end', 2'add_new_field' or 3'add_new_subfield",
                "2. add field if same field with same subfields doesn't exist, doesn't check indicators, e.g.: add whole field '985 $$2 test $$a 980' even if '985 $$2 vdbcul $$a 980' already exists",
                "3. check in every existing field if subfield exist before to add, with same example as before : will only add '$$2 test' in existing 985"
            ],
            "subfields" : "add each subfields between [] with comma separator --> e.g. ['a', 'b']. To get all subfields, use keyword 'all'. Use 'false' if not applicable"
        }
    },
    "item_cote" : {
        "bool" : "False",
        "_comment" :  "if bool is True, item cotation in input file (alternative call number) not used to select holding but simply added in item"
    },
    "cote_generique" : {
        "regex" : "\\s?\\(\\+[0-9]+\\)$",
        "_comment" : [
            "this setting allows to add multiple items in a same holding",
            "replace cotation in holding but not in item",
            "'\\s?\\(\\+[0-9]+\\)$' replace '1234567+(3)' by '1234567'",
            "'/[0-9]+$' replace 12234567/3 by 1234567",
            "if not replacement for cotation in holding, use empty quotes"
        ]
    },
    "cote_j" : {
        "bool" : "True",
        "_comment" : {
            "bool" : "if 2nd cotation (852 $$j in holding), put True, else False",
            "item_cote" : "if item_cote is True, 1st and 2nd cotation must be in item alternative_call_number : example 'cote1|cote2'"
        }
    },
    "check_duplicates" : {
        "barcode_empty" : "True",
        "mmsid_empty" : "True",
        "f035_empty" : "False",
        "_comment" : "True or False if no value is accepted or not"
    },
    "check_bib_match" : {
        "id_type" : "035",
        "identifier" : "",
        "multi_prefix" : "(TEST)book|(TEST)mem",
        "_comment" : {
            "id_type" : "for 'id_type' choose between 'iz_id', 'nz_id', '035' or 'empty' if no check needed on existing Alma bib recrod",
            "identifier" : [
                "identifier is optional, usefull to specify xpath of given tag in id_type, if not necessary use empty quotes",
                "default values : iz_id --> 'mms_id', nz_id --> 'mms_id', 035 --> './datafield[@tag='035']/subfield[@code='a']'"
                ],
            "multi_prefix" : [
                "multi_prefix is used to specify different prefixes that id_type might have in Alma, if not necessary use empty quotes",
                "if used first value must be prefix used in XMLfile. Use pipe as separator '|', example : (TEST)edoc|(TEST)part|(TEST)book"
            ]
        }
    },
    "sru_search" : {
        "bool" : "True",
        "identifier" : ["isbn", "issn", "standard_number"],
        "filter_criteria_and" : ["245|a_b"],
        "filter_criteria_or" : ["264|b"],
        "_comment" : {
            "identifier" : "allowed values : isbn, issn, standard_number",
            "log_sru" : "if multimatch_found, record not imported and log only added in log_bib_match with multimatch error",
            "filter_criteria" : "filter criteria for string subfield: (nb_words>5 and nb_words_diff<3) or (nb_words>2 and nb_words_diff<2) or nb_words_diff==0"
        }
    }
}